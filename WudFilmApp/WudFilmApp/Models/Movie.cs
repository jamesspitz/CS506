using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Threading.Tasks;

namespace WudFilmApp.Models
{
  /// <summary>
  /// The Movie class represents information about a single movie in the WUD Film App database. 
  /// </summary>
  /// <remarks>
  /// Each movie is uniquely identifiable within the database via it’s Id property. Movie records contain information about the movie, including title, summary, and links to trailers and posters. Movies also contain a reference to a list of movie showtimes which are related via corresponding MovieId and Movie properties in the Showtime class. The movie class exhibits a one-to-many relationship with showtimes.
  /// 
  /// </remarks>
  public class Movie
  {
    /// <summary>
    /// This is the key field for movies. This field is automatically generated by the database, cannot be changed, cannot be null, and will be a number greater than 0. It uniquely Identifies a Movie within the WUD Film App Database.  
    /// 
    /// </summary>
    [Key]
    [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
    public int Id { get; set; }

    /// <summary>
    /// This is a unique field containing the full title of the movie. This field is required and cannot be null.
    /// 
    /// </summary>
    [Required]
    public string Title { get; set; }

    /// <summary>
    /// Non-unique, non-null value indicating which subcommittee selected a movie.
    /// </summary>
    [EnumDataType(typeof(Subcommittee)), Required]
    public Subcommittee Subcommittee { get; set; }

    /// <summary>
    /// Property to hold the runtime of the film.
    /// </summary>
    [Required] public DateTime Runtime { get; set; }

    /// <summary>
    /// Media format for this movie
    /// </summary>
    public String Format { get; set; }

    /// <summary>
    /// List of close-captioning and auditory assistance available for this film
    /// </summary>
    public string[] CCAP { get; set; }

    /// <summary>
    /// Possibly null navigation property which links to a list of Showtimes for a movie.
    /// </summary>
    public virtual ICollection<Showtime> Showtimes { get; set; }

    /// <summary>
    /// List of trailers to be shown at showing
    /// </summary>
    public string[] Trailers { get; set; }

    /// <summary>
    /// This is a possibly null value. When not null this is a valid URL pointing to a poster for a movie.
    /// </summary>
    public string PosterUrl { get; set; }
  }
}
