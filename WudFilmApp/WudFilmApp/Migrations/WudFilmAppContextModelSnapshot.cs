// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WudFilmApp.Models;

namespace WudFilmApp.Migrations
{
    [DbContext(typeof(WudFilmAppContext))]
    partial class WudFilmAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WudFilmApp.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CCAP");

                    b.Property<string>("Format");

                    b.Property<string>("PosterUrl");

                    b.Property<DateTime>("Runtime");

                    b.Property<int>("Subcommittee");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<string>("Trailers");

                    b.HasKey("Id");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("WudFilmApp.Models.Showtime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("BookingConfirmed");

                    b.Property<string>("Collaborator");

                    b.Property<string>("CollaboratorContactInfo");

                    b.Property<string>("CollaboratorPerson");

                    b.Property<string>("Distributor");

                    b.Property<bool>("FBEventMade");

                    b.Property<string>("Format");

                    b.Property<DateTime>("MediaArrived");

                    b.Property<bool>("MediaOrdered");

                    b.Property<string>("MediaReturnTrackingNumber");

                    b.Property<DateTime>("MediaReturned");

                    b.Property<int>("MovieId");

                    b.Property<string>("Notes");

                    b.Property<string>("PointPerson");

                    b.Property<string>("Projectionist");

                    b.Property<bool>("PublicityFormSent");

                    b.Property<DateTime>("ShowDateTime");

                    b.Property<int>("ShowingAttendence");

                    b.Property<bool>("WUDFilm");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Showtime");
                });

            modelBuilder.Entity("WudFilmApp.Models.Showtime", b =>
                {
                    b.HasOne("WudFilmApp.Models.Movie", "Movie")
                        .WithMany("Showtimes")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
